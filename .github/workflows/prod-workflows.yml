name: Deploy to AWS EC2 using Docker Hub

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Build and push application Docker image (only if Dockerfile exists)
    - name: Check if Dockerfile exists
      id: dockerfile_check
      run: |
        if [ -f "Dockerfile" ]; then
          echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
        else
          echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Build and push application Docker image to Docker Hub
      if: steps.dockerfile_check.outputs.dockerfile_exists == 'true'
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/korraai:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/korraai:latest

    # Deploy to AWS EC2
    - name: Deploy to AWS EC2
      run: |
        # Install sshpass if not available
        sudo apt-get update
        sudo apt-get install -y sshpass
        
        # Copy docker-compose file to EC2
        sshpass -p "${{ secrets.EC2_PASSWORD }}" scp -o StrictHostKeyChecking=no \
          docker-compose.yml ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }}:~/
        
        # SSH into EC2 and deploy
        sshpass -p "${{ secrets.EC2_PASSWORD }}" ssh -o StrictHostKeyChecking=no \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
          
          # Update system and install Docker if not installed
          if ! command -v docker &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            sudo usermod -aG docker $USER
          fi
          
          # Install Docker Compose if not installed
          if ! command -v docker-compose &> /dev/null; then
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
          
          # Pull the latest application image (if it exists on Docker Hub)
          docker pull ${{ secrets.DOCKER_USERNAME }}/korraai:latest || echo "Image not found, will use existing or fail"
          
          # Stop existing containers
          docker-compose down || true
          
          # Start services with docker-compose
          docker-compose up -d
          
          # Clean up unused Docker images to save space
          docker image prune -f
        EOF