# Generated by Django 5.2.3 on 2025-06-19 20:43

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('platforms', '0001_initial'),
        ('tenants', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactLabel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('color_code', models.CharField(blank=True, max_length=7)),
                ('description', models.TextField(blank=True)),
                ('is_system_defined', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_labels', to='tenants.tenant')),
            ],
            options={
                'db_table': 'contact_labels',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_id', models.CharField(max_length=255)),
                ('first_name_encrypted', models.TextField(blank=True)),
                ('last_name_encrypted', models.TextField(blank=True)),
                ('email_encrypted', models.TextField(blank=True)),
                ('phone_encrypted', models.TextField(blank=True)),
                ('profile_picture_url', models.URLField(blank=True)),
                ('platform_username', models.CharField(blank=True, max_length=255)),
                ('platform_display_name', models.CharField(blank=True, max_length=255)),
                ('platform_profile_data', models.JSONField(default=dict)),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('custom_fields', models.JSONField(default=dict)),
                ('acquisition_source', models.CharField(blank=True, max_length=100)),
                ('customer_lifetime_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('first_contact_at', models.DateTimeField(blank=True, null=True)),
                ('last_contact_at', models.DateTimeField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('pin_order', models.IntegerField(blank=True, null=True)),
                ('last_seen_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('away', 'Away')], default='offline', max_length=20)),
                ('is_typing', models.BooleanField(default=False)),
                ('typing_in_conversation_id', models.UUIDField(blank=True, null=True)),
                ('engagement_score', models.DecimalField(decimal_places=1, default=0.0, max_digits=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='platforms.socialplatform')),
                ('platform_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='platforms.tenantplatformaccount')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='tenants.tenant')),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='ContactInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_messages', models.IntegerField(default=0)),
                ('messages_sent', models.IntegerField(default=0)),
                ('messages_received', models.IntegerField(default=0)),
                ('avg_response_time_seconds', models.IntegerField(blank=True, null=True)),
                ('sentiment_trend', models.CharField(choices=[('positive', 'Positive'), ('neutral', 'Neutral'), ('negative', 'Negative')], default='neutral', max_length=20)),
                ('preferred_contact_hours', models.JSONField(default=list)),
                ('most_active_day', models.CharField(blank=True, choices=[('monday', 'Monday'), ('tuesday', 'Tuesday'), ('wednesday', 'Wednesday'), ('thursday', 'Thursday'), ('friday', 'Friday'), ('saturday', 'Saturday'), ('sunday', 'Sunday')], max_length=10)),
                ('last_engagement_score_update', models.DateTimeField(blank=True, null=True)),
                ('insights_generated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_insights', to='tenants.tenant')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insights', to='customers.customer')),
            ],
            options={
                'db_table': 'contact_insights',
            },
        ),
        migrations.CreateModel(
            name='CustomerLabel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labels', to='customers.customer')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_assignments', to='customers.contactlabel')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customer_labels', to='tenants.tenant')),
            ],
            options={
                'db_table': 'customer_labels',
            },
        ),
        migrations.AddIndex(
            model_name='contactlabel',
            index=models.Index(fields=['tenant', 'is_system_defined'], name='contact_lab_tenant__c4eb2b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='contactlabel',
            unique_together={('tenant', 'name')},
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'is_archived', 'is_pinned'], name='customers_tenant__94bd60_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'status'], name='customers_tenant__9b9837_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'engagement_score'], name='customers_tenant__cc540e_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['tenant', 'last_contact_at'], name='customers_tenant__a0d02b_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(condition=models.Q(('is_pinned', True)), fields=['pin_order'], name='customers_pinned_order_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customer',
            unique_together={('tenant', 'platform', 'external_id')},
        ),
        migrations.AddIndex(
            model_name='contactinsight',
            index=models.Index(fields=['tenant', 'sentiment_trend'], name='contact_ins_tenant__8534d6_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinsight',
            index=models.Index(fields=['tenant', 'most_active_day'], name='contact_ins_tenant__73e87d_idx'),
        ),
        migrations.AddIndex(
            model_name='contactinsight',
            index=models.Index(fields=['insights_generated_at'], name='contact_ins_insight_3fcaf1_idx'),
        ),
        migrations.AddIndex(
            model_name='customerlabel',
            index=models.Index(fields=['tenant', 'label'], name='customer_la_tenant__ff0db6_idx'),
        ),
        migrations.AddIndex(
            model_name='customerlabel',
            index=models.Index(fields=['customer'], name='customer_la_custome_ed6857_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='customerlabel',
            unique_together={('customer', 'label')},
        ),
    ]
